name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - staging
      - main
  pull_request:
    branches:
      - develop
      - main

env:
  RECOLNAT_VERSION: 1.0.0
  DOCKER_DRIVER: overlay2
  HARBOR_REGISTRY: dfgxr43v.c1.gra9.container-registry.ovh.net/dinsi-oci-images-repo

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.set-vars.outputs.app_version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set app version depending on branch
        id: set-vars
        run: |
          if [[ "${GITHUB_REF_NAME}" == "develop" ]]; then
            echo "app_version=dev" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF_NAME}" == "staging" ]]; then
            echo "app_version=rc" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            echo "app_version=prod" >> $GITHUB_OUTPUT
          else
            echo "app_version=${GITHUB_REF_NAME}-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi

      - name: Build with Maven
        run: |
          mvn -s .m2/settings.xml --batch-mode -Dmaven.repo.local=.m2/repository \
            -Drevision=${{ steps.set-vars.outputs.app_version }} clean install -f ./pom.xml

  docker-build:
    runs-on: ubuntu-latest
    needs: [build]
    outputs:
      app_version: ${{ needs.build.outputs.app_version }}
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker Image (no push)
        run: |
          docker build -t backend:${{ needs.build.outputs.app_version }} .

      - name: Save Docker Image as artifact
        run: |
          docker save backend:${{ needs.build.outputs.app_version }} -o image.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-image
          path: image.tar

  docker-publish:
    runs-on: ubuntu-latest
    needs: [docker-build]
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-image
          path: .

      - name: Load Docker image
        run: |
          docker load -i image.tar

      - name: Docker login to Harbor
        run: |
          docker login ${{ env.HARBOR_REGISTRY }}/recolnat/ \
            -u '${{ secrets.HARBOR_REGISTRY_USER }}' \
            -p '${{ secrets.HARBOR_REGISTRY_PASSWORD }}'

      - name: Tag and push Docker Image
        run: |
          docker tag backend:${{ needs.docker-build.outputs.app_version }} \
            ${{ env.HARBOR_REGISTRY }}/recolnat/backend:${{ needs.docker-build.outputs.app_version }}
          docker push ${{ env.HARBOR_REGISTRY }}/recolnat/backend:${{ needs.docker-build.outputs.app_version }}
