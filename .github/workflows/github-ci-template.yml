name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - staging
      - main
  pull_request:
    branches:
      - develop
      - main
  workflow_call:
    inputs:
      project_ci:
        required: true
        type: string
    secrets:
      SONAR_TOKEN:
        required: true
        description: 'Token SonarQube pour l''analyse de code.'
      NEXUS_USERNAME:
        required: true
        description: 'Nom d''utilisateur pour la connexion à Nexus.'
      NEXUS_PASSWORD:
        required: true
        description: 'Mot de passe pour la connexion à Nexus.'
      HARBOR_REGISTRY_USER:
        required: true
        description: 'Nom d''utilisateur pour la connexion au registre Harbor.'
      HARBOR_REGISTRY_PASSWORD:
        required: true
        description: 'Mot de passe pour la connexion au registre Harbor.'

env:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  DOCKER_DRIVER: overlay2
  RECOLNAT_VERSION: 1.0.0
  APP_VERSION: ""
  RECOLNAT_REGISTRY: dfgxr43v.c1.gra9.container-registry.ovh.net/dinsi-oci-images-repo

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.set-version.outputs.app_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set app version
        id: set-version
        run: |
          if [[ "${{ github.ref_name }}" == "develop" ]]; then
            echo "APP_VERSION=dev" >> $GITHUB_ENV
            echo "app_version=dev" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == "staging" ]]; then
            echo "APP_VERSION=rc" >> $GITHUB_ENV
            echo "app_version=rc" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "APP_VERSION=prod" >> $GITHUB_ENV
            echo "app_version=prod" >> $GITHUB_OUTPUT
          else
            echo "APP_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
            echo "app_version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Map Nexus domain in /etc/hosts
        run: |
          echo "51.210.167.37 dinsi-nexus.mnhn.cloud" | sudo tee -a /etc/hosts

      - name: Generate and add Nexus certificate to trust store
        run: |
          echo | openssl s_client -showcerts -servername dinsi-nexus.mnhn.cloud -connect 51.210.167.37:443 2>/dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > nexus-cert.pem
          sudo cp nexus-cert.pem /usr/local/share/ca-certificates/nexus-cert.crt
          sudo update-ca-certificates
          sudo keytool -import -trustcacerts -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit -noprompt -alias nexus-cert -file nexus-cert.pem
      
      - name: Cache Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn $MAVEN_CLI_OPTS -Drevision=${{ env.APP_VERSION }} clean install -f ./pom.xml

      - name: Save build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: target/ 

  publish:
    runs-on: ubuntu-latest
    needs: build
    env:
      APP_VERSION: ${{ needs.build.outputs.app_version }}
      RECOLNAT_REGISTRY: dfgxr43v.c1.gra9.container-registry.ovh.net/dinsi-oci-images-repo/explorer
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output

      - name: Debug HARBOR_URL
        run: echo "HARBOR_URL=${{ env.RECOLNAT_REGISTRY }}"

      - name: Debug APP_VERSION publish
        run: echo "APP_VERSION=${{ env.APP_VERSION }}"

      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Map Nexus domain in /etc/hosts
        run: |
          echo "51.210.167.37 dinsi-nexus.mnhn.cloud" | sudo tee -a /etc/hosts

      - name: Add Nexus certificate to JDK keystore
        run: |
          echo | openssl s_client -showcerts -servername dinsi-nexus.mnhn.cloud -connect 51.210.167.37:443 2>/dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > nexus-cert.pem
          sudo cp nexus-cert.pem /usr/local/share/ca-certificates/nexus-cert.crt
          sudo update-ca-certificates
          sudo keytool -import -trustcacerts -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit -noprompt -alias nexus-cert -file nexus-cert.pem
      - name: debug harbor env 2
        run: |
          echo "HARBOR_REGISTRY_USER=${{ secrets.HARBOR_REGISTRY_USER }}"
          echo "HARBOR_REGISTRY_PASSWORD=${{ secrets.HARBOR_REGISTRY_PASSWORD }}"
          echo "Raw HARBOR_REGISTRY_USER=${{ secrets.HARBOR_REGISTRY_USER }}"
          mvn help:effective-settings -s .m2/settings.xml
      - name: Publish image
        env:
          RECOLNAT_REGISTRY: ${{ env.RECOLNAT_REGISTRY }}
          APP_VERSION: ${{ env.APP_VERSION }}
        run: |
          mvn $MAVEN_CLI_OPTS \
          -DVERSION=${{ env.APP_VERSION }} \
          -DHARBOR_URL=${{ env.RECOLNAT_REGISTRY }} \
          -DHARBOR_REGISTRY_USER=${{ secrets.HARBOR_REGISTRY_USER }} \
          -DHARBOR_REGISTRY_PASSWORD=${{ secrets.HARBOR_REGISTRY_PASSWORD }} \
          clean deploy -DskipTests -f ./pom.xml