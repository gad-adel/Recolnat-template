name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - staging
      - main
  pull_request:
    branches:
      - develop
      - main
  workflow_call:
    inputs:
      project_ci:
        required: true
        type: string
    secrets:
      HARBOR_REGISTRY_PASSWORD:
        required: true
      SONAR_TOKEN:
        required: true
      SONAR_URL:
        required: true

env:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  DOCKER_DRIVER: overlay2
  RECOLNAT_VERSION: 1.0.0
  APP_VERSION: ""
  RECOLNAT_REGISTRY: dfgxr43v.c1.gra9.container-registry.ovh.net

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      RECOLNAT_REGISTRY: dfgxr43v.c1.gra9.container-registry.ovh.net
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set app version
        id: set-version
        run: |
          if [[ "${{ github.ref_name }}" == "develop" ]]; then
            echo "APP_VERSION=dev" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "staging" ]]; then
            echo "APP_VERSION=rc" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "APP_VERSION=prod" >> $GITHUB_ENV
          else
            echo "APP_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          fi

      - name: Map Nexus domain in /etc/hosts
        run: |
          echo "51.210.167.37 dinsi-nexus.mnhn.cloud" | sudo tee -a /etc/hosts

      - name: Generate and add Nexus certificate to trust store
        run: |
          echo | openssl s_client -showcerts -servername dinsi-nexus.mnhn.cloud -connect 51.210.167.37:443 2>/dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > nexus-cert.pem
          sudo cp nexus-cert.pem /usr/local/share/ca-certificates/nexus-cert.crt
          sudo update-ca-certificates
          sudo keytool -import -trustcacerts -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit -noprompt -alias nexus-cert -file nexus-cert.pem

      - name: Build JAR
        run: mvn $MAVEN_CLI_OPTS -Drevision=${{ env.APP_VERSION }} clean package -DskipTests -f ./pom.xml

      # - name: SonarQube Analysis
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: |
      #     mvn $MAVEN_CLI_OPTS sonar:sonar \
      #       -Dsonar.projectKey=${{ inputs.project_ci }} \
      #       -Dsonar.projectName=${{ inputs.project_ci }} \
      #       -Dsonar.host.url=${{ secrets.SONAR_URL}} \
      #       -Dsonar.login=ci-user
      - name: echo url and token
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }}
        run: |
          echo "SONAR_HOST_URL=http://${{env.SONAR_HOST_URL}}"
          echo "SONAR_TOKEN=$SONAR_TOKEN"

      - name: SonarQube Analysis via Docker
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }}
        run: |
          docker run --rm \
            -e SONAR_HOST_URL=http://${{env.SONAR_HOST_URL}} \
            -e SONAR_LOGIN=$SONAR_TOKEN \
            -v "${{ github.workspace }}:/usr/src" \
            sonarsource/sonar-scanner-cli:latest \
            -Dsonar.projectKey=${{ inputs.project_ci }} \
            -Dsonar.projectName=${{ inputs.project_ci }} \
            -Dsonar.sources=. \
            -Dsonar.java.binaries=target
      
      # - name: Build Docker image
      #   run: docker build -t ${{ env.RECOLNAT_REGISTRY }}/dinsi-oci-images-repo/recolnat/${{ inputs.project_ci }}:${{ github.sha }} -f Dockerfile .

      # - name: Log in to Docker registry
      #   run: docker login dfgxr43v.c1.gra9.container-registry.ovh.net -u 'robot$recolnat-ci' -p ${{ secrets.HARBOR_REGISTRY_PASSWORD }}

      # - name: Push Docker image
      #   run: docker push ${{ env.RECOLNAT_REGISTRY }}/dinsi-oci-images-repo/recolnat/${{ inputs.project_ci }}:${{ github.sha }}