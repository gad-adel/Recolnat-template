name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - staging
      - main
  pull_request:
    branches:
      - develop
      - main
  workflow_call:
    inputs:
      project_ci:
        required: true
        type: string
    secrets:
      SONAR_TOKEN:
        required: true
        description: 'Token SonarQube pour l''analyse de code.'
      HARBOR_REGISTRY_USER:
        required: true
        description: 'Nom d''utilisateur pour la connexion à Harbor Registry.'
      HARBOR_REGISTRY_PASSWORD:
        required: true
        description: 'Mot de passe pour la connexion à Harbor Registry.'

    outputs:
      app_version:
        description: "Version de l'application déterminée et utilisée pour la construction."
        value: ${{ jobs.build.outputs.app_version }}

env:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  DOCKER_DRIVER: overlay2
  RECOLNAT_VERSION: 1.0.0
  APP_VERSION: "prod"

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'

  #     - name: Set app version
  #       run: |
  #         if [[ "${{ github.ref_name }}" == "develop" ]]; then
  #           echo "APP_VERSION=dev" >> $GITHUB_ENV
  #         elif [[ "${{ github.ref_name }}" == "staging" ]]; then
  #           echo "APP_VERSION=rc" >> $GITHUB_ENV
  #         elif [[ "${{ github.ref_name }}" == "main" ]]; then
  #           echo "APP_VERSION=prod" >> $GITHUB_ENV
  #         else
  #           echo "APP_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
  #         fi

  #     - name: Map Nexus domain in /etc/hosts
  #       run: |
  #           echo "51.210.167.37 dinsi-nexus.mnhn.cloud" | sudo tee -a /etc/hosts

  #     - name: Generate and add Nexus certificate to trust store
  #       run: |
  #           echo | openssl s_client -showcerts -servername dinsi-nexus.mnhn.cloud -connect 51.210.167.37:443 2>/dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > nexus-cert.pem

  #     - name: Add Nexus certificate to trust store
  #       run: |
  #         sudo cp nexus-cert.pem /usr/local/share/ca-certificates/nexus-cert.crt
  #         sudo update-ca-certificates
            
  #     - name: Add Nexus certificate to JDK keystore
  #       run: |
  #         sudo keytool -import -trustcacerts -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit -noprompt -alias nexus-cert -file nexus-cert.pem

  #     - name: Build with Maven
  #       run: mvn $MAVEN_CLI_OPTS -Drevision=${{ env.APP_VERSION }} clean install -f ./pom.xml

  # sonarqube:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'

  #     - name: Debug APP_VERSION 2
  #       run: echo "APP_VERSION=${{ env.APP_VERSION }}"

  #     - name: Run SonarQube analysis
  #       run: mvn sonar:sonar \
  #         -Drevision=${{ env.APP_VERSION }} \
  #         -Dsonar.projectKey=${{ secrets.PROJECT_CI }} \
  #         -Dsonar.projectName=${{ secrets.PROJECT_CI }} \
  #         -Dsonar.host.url=https://dinsi-sonarqube.mnhn.fr \
  #         -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'temurin'

        - name: Set app version
          run: |
            if [[ "${{ github.ref_name }}" == "develop" ]]; then
              echo "APP_VERSION=dev" >> $GITHUB_ENV
            elif [[ "${{ github.ref_name }}" == "staging" ]]; then
              echo "APP_VERSION=rc" >> $GITHUB_ENV
            elif [[ "${{ github.ref_name }}" == "main" ]]; then
              echo "APP_VERSION=prod" >> $GITHUB_ENV
            else
              echo "APP_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
            fi

        - name: Map Nexus domain in /etc/hosts
          run: |
            echo "51.210.167.37 dinsi-nexus.mnhn.cloud" | sudo tee -a /etc/hosts

        # - name: Generate and add Nexus certificate to trust store
        #   run: |
        #     echo | openssl s_client -showcerts -servername dinsi-nexus.mnhn.cloud -connect 51.210.167.37:443 2>/dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > nexus-cert.pem
        #     sudo keytool -import -trustcacerts -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit -noprompt -alias nexus-cert -file nexus-cert.pem
        #     sudo keytool -list -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit
        - name: Generate and add Nexus certificate to trust store
          run: |
            echo | openssl s_client -showcerts -servername dinsi-nexus.mnhn.cloud -connect 51.210.167.37:443 2>/dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > nexus-cert.pem
            sudo keytool -import -trustcacerts -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit -noprompt -alias nexus-cert -file nexus-cert.pem

        - name: Cache Nexus certificate
          uses: actions/cache@v3
          with:
            path: nexus-cert.pem
            key: nexus-cert

        - name: Add Nexus certificate to trust store
          run: |
            sudo cp nexus-cert.pem /usr/local/share/ca-certificates/nexus-cert.crt
            sudo update-ca-certificates
            
        - name: Add Nexus certificate to JDK keystore
          run: |
            sudo keytool -import -trustcacerts -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit -noprompt -alias nexus-cert -file nexus-cert.pem

        - name: Build with Maven
          run: mvn -s .m2/settings.xml $MAVEN_CLI_OPTS -Drevision=${{ env.APP_VERSION }} clean install -f ./pom.xml

    publish:
      runs-on: ubuntu-latest
      needs: ["build"]
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'temurin'

        - name: Restore Nexus certificate from cache
          uses: actions/cache@v3
          with:
            path: nexus-cert.pem
            key: nexus-cert

        # - name: Add Nexus certificate to trust store
        #   run: |
        #     sudo cp nexus-cert.pem /usr/local/share/ca-certificates/nexus-cert.crt
        #     sudo update-ca-certificates
        - name: Verify Nexus certificate
          run: cat nexus-cert.pem
  
        - name: Add Nexus certificate to JDK keystore
          run: |
            sudo keytool -import -trustcacerts -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit -noprompt -alias nexus-cert -file nexus-cert.pem
  

        - name: Map Nexus domain in /etc/hosts
          run: |
            echo "51.210.167.37 dinsi-nexus.mnhn.cloud" | sudo tee -a /etc/hosts

        - name: Publish Docker image with Jib
          env:
            NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
            NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          run: |
            mvn -s .m2/settings.xml $MAVEN_CLI_OPTS \
              -Drevision=${{ env.APP_VERSION }} \
              -Djib.to.auth.username=${{ secrets.NEXUS_USERNAME }} \
              -Djib.to.auth.password=${{ secrets.NEXUS_PASSWORD }} \
              clean deploy -X